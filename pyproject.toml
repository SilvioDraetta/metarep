[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"


[project]
name = "metarep"
dynamic = ["version"]
description = "A repository about making repositories"
readme = "README.md"
license = { file = "LICENSE" }
requires-python = ">=3.7"
authors = [
  { name = "Luca Baldini", email = "luca.baldini@unipi.it" }
  ]
dependencies = [
  "numpy",
  ]

[project.urls]
Homepage = "https://github.com/lucabaldini/metarep"
Issues = "https://github.com/lucabaldini/metarep/issues"

[project.optional-dependencies]
dev = [
    "pytest",
    "ruff",
    "pylint",
]
docs = [
    "sphinx",
]


[tool.hatch.version]
path = "src/metarep/_version.py"

[tool.nox]
reuse_existing_virtualenvs = true
python = ["3.9", "3.10", "3.11", "3.12"]

[tool.ruff]
target-version = "py37" # Target the oldest Python version supported.
line-length = 100
src = ["src"] # This allows ruff to identify first-party modules.

[tool.ruff.lint]
select = [
  "E",   # pycodestyle errors
  "F",   # pyflakes
  "I",   # isort (imports)
  "B",   # flake8-bugbear
  "UP",  # pyupgrade (kept safe for py37)
  "SIM", # flake8-simplify
  "C4",  # flake8-comprehensions
  "NPY", # NumPy-specific best practices
  "PERF" # performance gotchas
]
ignore = [
  "C408" # I sometimes like dict() calls better than literal dicts
]

[tool.pylint.'MESSAGES CONTROL']
disable = [
  "missing-docstring", # too strict at early stages
  "too-few-public-methods", # noisy for small classes (dataclasses, models)
  "too-many-arguments", # sometimes expected in scientific code
  "too-many-positional-arguments",
  "too-many-instance-attributes",
  "too-many-locals",
  "use-dict-literal", # see the comment about ruff C408
]

[tool.pylint.'BASIC']
good-names = ["i", "j", "k", "x", "y", "z"]

[tool.pylint.'FORMAT']
max-line-length = 100